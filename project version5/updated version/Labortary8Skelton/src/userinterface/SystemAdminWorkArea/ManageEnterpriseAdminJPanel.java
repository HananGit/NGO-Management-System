/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();
        enterpriseJTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[5];
                    row[0] =userAccount; 
                            
                    row[1] = network.getName();
                    row[2] = enterprise.getName();
                    row[3] = userAccount.getRole();
                    row[4] = userAccount.getStatus();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox() {
        networkJComboBox.removeAllItems();

        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseJComboBox.addItem(enterprise);
        }

    }
       public void resetFields(){
         nameJTextField.setText("");
         usernameJTextField.setText("");   
         passwordJPasswordField.setText("");  
    }
        
        
      private boolean validateData(){
    
        Network network = (Network) networkJComboBox.getSelectedItem();
//        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterpriseJComboBox.getSelectedItem();

        if (network == null ) {
         JOptionPane.showMessageDialog(null,"Network and/or Enterprise type are not selected","Warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if(!(nameJTextField.getText().trim().length() > 0)){
           JOptionPane.showMessageDialog(null,"Name field is empty","Warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!( usernameJTextField.getText().trim().length() > 0)){
           JOptionPane.showMessageDialog(null,"Username field is empty","Warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        else if(!(String.valueOf(passwordJPasswordField.getPassword()).trim().length() > 0)){
           JOptionPane.showMessageDialog(null,"Password field is empty","Warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else{
          return true;  
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabelEnterprise = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        createJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        userStatusJComboBox = new javax.swing.JComboBox();
        jButtonEnable = new javax.swing.JButton();
        jButtonDisable = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Network", "Enterprise Name", "Role", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 109, 523, 95));

        jLabel1.setText("Network");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 239, -1, -1));

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 236, 136, -1));

        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 324, -1, 35));
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 328, 136, -1));

        jLabelEnterprise.setText("Enterprise");
        add(jLabelEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 239, -1, -1));

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });
        add(enterpriseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 236, 136, -1));

        createJButton.setText("Create");
        createJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createJButtonActionPerformed(evt);
            }
        });
        add(createJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 526, -1, -1));

        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 376, -1, -1));
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(518, 333, 136, -1));

        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 331, -1, -1));
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 373, 136, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 16, -1, -1));

        jLabelStatus.setText("Status");
        add(jLabelStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 420, -1, -1));

        userStatusJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enabled", "Disabled" }));
        add(userStatusJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 417, 136, -1));

        jButtonEnable.setText("Enable");
        jButtonEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnableActionPerformed(evt);
            }
        });
        add(jButtonEnable, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 109, -1, -1));

        jButtonDisable.setText("Disable");
        jButtonDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisableActionPerformed(evt);
            }
        });
        add(jButtonDisable, new org.netbeans.lib.awtextra.AbsoluteConstraints(693, 154, -1, -1));

        jLabel3.setText("Email");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, -1, -1));
        add(jTextFieldEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, 130, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }


    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void createJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createJButtonActionPerformed
         if(validateData()){
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();

        String username = usernameJTextField.getText().toLowerCase();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();
        String email = jTextFieldEmail.getText();
        String status = (String) userStatusJComboBox.getSelectedItem();

        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
        UserAccount account;
        
        boolean flag = true;
        network:
        for (Network n : system.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount ua : e.getUserAccountDirectory().getUserAccountList()) {
                    if (username.equals(ua.getUsername())) {
                        flag = false;
                        break network;
                    }

                }
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                        if (username.equals(ua.getUsername())) {
                            flag = false;
                            break network;
                        }

                    }
                }
            }

        }

        if(flag){
        account = enterprise.getUserAccountDirectory().createUserAccount(name, username, password, employee, new AdminRole(), status,email);
        JOptionPane.showMessageDialog(null, "The Enterprise Admin has been added successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
        resetFields();
        populateTable();}
        else
        {
            JOptionPane.showMessageDialog(null, "Username exists please choose another one");
        }
         }
         else
             return;

    }//GEN-LAST:event_createJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void jButtonEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnableActionPerformed
int selectedRow = enterpriseJTable.getSelectedRow();
        if(selectedRow>=0)
        {
            
            
                UserAccount ua = (UserAccount)enterpriseJTable.getValueAt(selectedRow,0);
                ua.setStatus("Enabled");
                populateTable();
            
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }        
            // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEnableActionPerformed

    private void jButtonDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisableActionPerformed
    int selectedRow = enterpriseJTable.getSelectedRow();
        if(selectedRow>=0)
        {
            
            
                UserAccount ua = (UserAccount)enterpriseJTable.getValueAt(selectedRow,0);
                ua.setStatus("Disabled");
                populateTable();
            
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }        
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonDisableActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton createJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JButton jButtonDisable;
    private javax.swing.JButton jButtonEnable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelEnterprise;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JComboBox userStatusJComboBox;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
