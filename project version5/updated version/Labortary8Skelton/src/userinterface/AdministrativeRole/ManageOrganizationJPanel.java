/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Enterprise.BenefactorCompanyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.OperatingCompanyEnterprise;
import Business.Enterprise.TargetCompanyEnterprise;
import Business.Enterprise.VendorCompanyEnterprise;
import Business.Organization.BenefactorAdminOrganization;
import Business.Organization.EventManagementOrganization;
import Business.Organization.FinanceOrganization;
import Business.Organization.HumanResourceOrganization;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import Business.Organization.TargetAdminOrganization;
import Business.Organization.VendorAdminOrganization;
import Business.Organization.VolunteerOrganization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private JPanel userProcessContainer;
    private Enterprise enterprise;

    /**
     * Creates new form ManageOrganizationJPanel
     */
//    public ManageOrganizationJPanel(JPanel userProcessContainer,OrganizationDirectory directory) {
    public ManageOrganizationJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.setSize(1100,800);
        this.userProcessContainer = userProcessContainer;
//        this.directory = directory;
        this.enterprise = enterprise;

        populateTable();
        populateCombo();
    }

    private void populateCombo() {
        organizationJComboBox.removeAllItems();
        Type type = null;
//        for (Type type : Organization.Type.values()){
        if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.OperatingCompany) {
            organizationJComboBox.addItem(type.EventManagementDepartment);
            organizationJComboBox.addItem(type.FinanceDepartment);
            organizationJComboBox.addItem(type.HumanResourceDepartment);
            organizationJComboBox.addItem(type.Volunteer);

        } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.BenefactorCompany) {
            organizationJComboBox.addItem(type.Benefactor);
        } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.TargetCompany) {
            organizationJComboBox.addItem(type.Target);
        } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.VendorCompany) {
            organizationJComboBox.addItem(type.Vendor);
        }

//            if (!type.getValue().equals(Type.Admin.getValue()))
//                organizationJComboBox.addItem(type);
//        }
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            Object[] row = new Object[2];
            row[0] = organization.getOrganizationID();
            row[1] = organization.getName();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 152, 560, 130));

        addJButton.setBackground(new java.awt.Color(255, 255, 255));
        addJButton.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        addJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/IconsPictures/Icons/Add.GIF"))); // NOI18N
        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, -1, -1));

        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 260, -1));

        jLabel1.setForeground(new java.awt.Color(51, 255, 153));
        jLabel1.setText("Organization Type ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, -1, -1));

        backJButton.setBackground(new java.awt.Color(255, 255, 255));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/IconsPictures/Icons/Back.GIF"))); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 28, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 153));
        jLabel2.setText("Manage Organization");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/Green.PNG"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        Type type = (Type) organizationJComboBox.getSelectedItem();
//        System.out.println(" "+type);
        boolean flag = true;
        if (enterprise instanceof BenefactorCompanyEnterprise) {
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof BenefactorAdminOrganization) {
                    if (type.equals(Type.Benefactor)) {
//                        System.out.println("" + type);
                        flag = false;
                        break;
                    }
                }
            }
        } else if (enterprise instanceof OperatingCompanyEnterprise) {
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof FinanceOrganization) {
                    if (type.equals(Type.FinanceDepartment)) {
//                        System.out.println("" + type);
                        flag = false;
                        break;
                    }
                }
                else if (o instanceof EventManagementOrganization) {
                    if (type.equals(Type.EventManagementDepartment)) {
//                        System.out.println("" + type);
                        flag = false;
                        break;
                    }
                }
               else if (o instanceof HumanResourceOrganization) {
                    if (type.equals(Type.HumanResourceDepartment)) {
//                        System.out.println("" + type);
                        flag = false;
                        break;
                    }
                }
               else if (o instanceof VolunteerOrganization) {
                    if (type.equals(Type.Volunteer)) {
//                        System.out.println("" + type);
                        flag = false;
                        break;
                    }
                }
            }
        }
        else if (enterprise instanceof VendorCompanyEnterprise) {
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof VendorAdminOrganization) {
                    if (type.equals(Type.Vendor)) {
//                        System.out.println("" + type);
                        flag = false;
                        break;
                    }
                }
            }
        }
        else if (enterprise instanceof TargetCompanyEnterprise) {
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof TargetAdminOrganization) {
                    if (type.equals(Type.Target)) {
//                        System.out.println("" + type);
                        flag = false;
                        break;
                    }
                }
            }
        }

        if (flag) {
            enterprise.getOrganizationDirectory().createOrganization(type);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Organization already exsists");
        }

    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
