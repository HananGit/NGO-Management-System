/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
    private JPanel container;
    private EcoSystem business;
    private Enterprise enterprise;

    public ManageUserAccountJPanel(JPanel container, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.setSize(1100,800);
        this.enterprise = enterprise;
        this.container = container;
        this.business=business;
        popOrganizationComboBox();
        // employeeJComboBox.removeAllItems();
        popData();
    }

    public void popOrganizationComboBox() {
        organizationJComboBox.removeAllItems();

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            organizationJComboBox.addItem(organization);
        }
    }

    public void populateEmployeeComboBox(Organization organization) {
        employeeJComboBox.removeAllItems();

        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()) {
            employeeJComboBox.addItem(employee);
        }
    }

    private void populateRoleComboBox(Organization organization) {
        roleJComboBox.removeAllItems();
        for (Role role : organization.getSupportedRole()) {
            roleJComboBox.addItem(role);
        }
    }

    public void popData() {

        DefaultTableModel model = (DefaultTableModel) userJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[2];
                row[0] = ua;
                row[1] = ua.getRole();
                ((DefaultTableModel) userJTable.getModel()).addRow(row);
            }
        }
    }
       public void resetFields(){
         nameJTextField.setText("");
         emailJTextField.setText("");   
         passwordJPasswordField.setText("");  
    }
        
        
      private boolean validateData(){
    
        if(!(nameJTextField.getText().trim().length() > 0)){
           JOptionPane.showMessageDialog(null,"User Name field is empty","Warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!( emailJTextField.getText().trim().length() > 0)){
           JOptionPane.showMessageDialog(null,"Email field is empty","Warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        else if(!(String.valueOf(passwordJPasswordField.getPassword()).trim().length() > 0)){
           JOptionPane.showMessageDialog(null,"Password field is empty","Warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else{
          return true;  
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createUserJButton = new javax.swing.JButton();
        nameJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        employeeJComboBox = new javax.swing.JComboBox();
        backjButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        emailJTextField = new javax.swing.JTextField();
        userStatusJComboBox = new javax.swing.JComboBox();
        jLabelStatus = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createUserJButton.setBackground(new java.awt.Color(255, 255, 255));
        createUserJButton.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        createUserJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/IconsPictures/Icons/Add.GIF"))); // NOI18N
        createUserJButton.setText("Create");
        createUserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserJButtonActionPerformed(evt);
            }
        });
        add(createUserJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 730, -1, -1));
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 500, 220, -1));

        jLabel1.setForeground(new java.awt.Color(51, 255, 153));
        jLabel1.setText("User Name :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 500, -1, -1));

        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userJTable);
        if (userJTable.getColumnModel().getColumnCount() > 0) {
            userJTable.getColumnModel().getColumn(0).setResizable(false);
            userJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 595, 179));

        jLabel2.setForeground(new java.awt.Color(51, 255, 153));
        jLabel2.setText("Password :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 600, -1, -1));

        jLabel3.setForeground(new java.awt.Color(51, 255, 153));
        jLabel3.setText("Employee :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, -1, -1));

        employeeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(employeeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 390, 220, -1));

        backjButton1.setBackground(new java.awt.Color(255, 255, 255));
        backjButton1.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        backjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/IconsPictures/Icons/Back.GIF"))); // NOI18N
        backjButton1.setText("Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 28, 160, -1));

        jLabel5.setForeground(new java.awt.Color(51, 255, 153));
        jLabel5.setText("Organization :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, -1, -1));

        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 330, 220, -1));

        jLabel4.setForeground(new java.awt.Color(51, 255, 153));
        jLabel4.setText("Role :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, -1, -1));

        roleJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(roleJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 450, 220, -1));

        jLabel6.setForeground(new java.awt.Color(51, 255, 153));
        jLabel6.setText("Email :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 550, -1, -1));
        add(emailJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 550, 220, -1));

        userStatusJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enabled", "Disabled" }));
        add(userStatusJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 650, 220, -1));

        jLabelStatus.setForeground(new java.awt.Color(51, 255, 153));
        jLabelStatus.setText("Status :");
        add(jLabelStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 650, -1, -1));
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 600, 220, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 255, 153));
        jLabel7.setText("Manage Relationship");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/Green.PNG"))); // NOI18N
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void createUserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserJButtonActionPerformed

        if(validateData()){
        String userName = nameJTextField.getText().toLowerCase();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        Employee employee = (Employee) employeeJComboBox.getSelectedItem();
        Role role = (Role) roleJComboBox.getSelectedItem();
        String email = emailJTextField.getText();
        String status = (String) userStatusJComboBox.getSelectedItem();
//        String emailPassword = String.valueOf(emailPasswordJPasswordField.getPassword());
        String name = String.valueOf(employeeJComboBox.getSelectedItem());
//        for(UserAccount ua:enterprise.getUserAccountDirectory().getUserAccountList())
//        {
//            
//        }
//        organization.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
        boolean flag = true;
        network:
        for (Network n : business.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount ua : e.getUserAccountDirectory().getUserAccountList()) {
                    if (userName.equals(ua.getUsername())) {
                        flag = false;
                        break network;
                    }

                }
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                        if (userName.equals(ua.getUsername())) {
                            flag = false;
                            break network;
                        }

                    }
                }
            }

        }

        if (flag) {
//            if (emailPassword != null) {
//                organization.getUserAccountDirectory().createUserAccount(name, userName, password, employee, role, status, email, emailPassword);
//            } else {
                organization.getUserAccountDirectory().createUserAccount(name, userName, password, employee, role, status, email);
                JOptionPane.showMessageDialog(null, "The User Name has been created successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
                resetFields();
//            }
//        public UserAccount createUserAccount(String name,String username, String password, Employee employee, Role role,String status, String email, String emailpassword){
            popData();
        } else {
            JOptionPane.showMessageDialog(null, "UserName exists please choose another one");
        }
         }
        else 
            return;
    }//GEN-LAST:event_createUserJButtonActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null) {
            populateEmployeeComboBox(organization);
            populateRoleComboBox(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton createUserJButton;
    private javax.swing.JTextField emailJTextField;
    private javax.swing.JComboBox employeeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JTable userJTable;
    private javax.swing.JComboBox userStatusJComboBox;
    // End of variables declaration//GEN-END:variables
}
